from django.db.models.signals import post_save
from django.dispatch import receiver
from .models import ContactRequest, Consult, JobApplication

import telebot
import os
from dotenv import load_dotenv
from pathlib import Path
import logging
from django.utils.timezone import localtime


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(dotenv_path=BASE_DIR / '.env')

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏ chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
token = os.getenv('TELEGRAM_BOT_TOKEN')
chat_id = os.getenv('TELEGRAM_CHAT_ID')

if not token:
    logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
bot = telebot.TeleBot(token)


def send_message_with_file(message, file_field):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–∞—Ç –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –∏ –¥–æ—Å—Ç—É–ø–µ–Ω.
    """
    try:
        bot.send_message(chat_id, message)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        if file_field and hasattr(file_field, 'path') and os.path.exists(file_field.path):
            with open(file_field.path, 'rb') as f:
                bot.send_document(chat_id, f)
        elif file_field:
            logger.warning(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {getattr(file_field, 'path', '–Ω–µ—Ç –ø—É—Ç–∏')}")
    except Exception as e:
        logger.error(f"[Signal] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


# --- –°–∏–≥–Ω–∞–ª—ã Django –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram ---

@receiver(post_save, sender=ContactRequest)
def notify_contact_request(sender, instance, created, **kwargs):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ ContactRequest
    """
    if created:
        message = (
            f'üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞: {instance.phone}\n'
            f'Email: {instance.email}\n\n'
            f'–î–∞—Ç–∞: {localtime(instance.created_at).strftime("%Y-%m-%d %H:%M:%S")}'
        )
        send_message_with_file(message, getattr(instance, 'file', None))


@receiver(post_save, sender=Consult)
def notify_consult_request(sender, instance, created, **kwargs):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ Consult
    """
    if created:
        message = (
            f"üó® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:\n"
            f"–ò–º—è: {instance.name}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {instance.phone}\n"
            f"–¢–µ–∫—Å—Ç: {instance.text}"
        )
        send_message_with_file(message, None)  # –í Consult –Ω–µ—Ç —Ñ–∞–π–ª–∞? –ü–µ—Ä–µ–¥–∞–µ–º None


@receiver(post_save, sender=JobApplication)
def notify_job_application(sender, instance, created, **kwargs):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
    """
    if created:
        message = (
            f'üíº [–ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫] {instance.name} –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "{instance.job.title}"\n'
            f'–¢–µ–ª–µ—Ñ–æ–Ω: {instance.phone}\n'
            f'Email: {instance.email}\n'
            f'LinkedIn: {instance.linkedin_url}\n'
            f'–î–∞—Ç–∞: {localtime(instance.applied_at).strftime("%Y-%m-%d %H:%M:%S")}'
        )
        send_message_with_file(message, getattr(instance, 'file', None))
